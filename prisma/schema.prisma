// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    Budget        Budget[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

enum ExpenseSection {
    INVESTIMENT
    FIXED
    VARIABLE
}

model Expense {
    id          String         @id @default(cuid())
    name        String
    amount      Float
    category    String
    section     ExpenseSection
    expectedDay Int
    createdAt   DateTime       @default(now())
    updatedAt   DateTime       @updatedAt

    Budget   Budget? @relation(fields: [budgetId], references: [id])
    budgetId String?

    ExpenseRecord ExpenseRecord[]
}

model Income {
    id          String   @id @default(cuid())
    name        String
    amount      Float
    category    String
    expectedDay Int
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    Budget   Budget? @relation(fields: [budgetId], references: [id])
    budgetId String?

    IncomeRecord IncomeRecord[]
}

model ExpenseRecord {
    id        String   @id @default(cuid())
    name      String
    amount    Float
    date      DateTime
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Expense   Expense @relation(fields: [expenseId], references: [id])
    expenseId String
}

model IncomeRecord {
    id        String   @id @default(cuid())
    name      String
    amount    Float
    date      DateTime
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Income   Income @relation(fields: [incomeId], references: [id])
    incomeId String
}

model Budget {
    id       String    @id @default(cuid())
    incomes  Income[]
    expenses Expense[]

    user   User   @relation(fields: [userId], references: [id])
    userId String
}
