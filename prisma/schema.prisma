// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    Budget        Budget[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model ExpenseSection {
    id         String    @id @default(cuid())
    name       String
    percentage Int
    Expense    Expense[]
}

model Category {
    id   String @id @default(cuid())
    name String

    BudgetItem BudgetItem[]
}

model BudgetItem {
    id        String   @id @default(cuid())
    name      String
    amount    Float
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    category   Category @relation(fields: [categoryId], references: [id])
    categoryId String

    Budget   Budget? @relation(fields: [budgetId], references: [id])
    budgetId String?

    Record  Record[]
    Expense Expense[]
    Income  Income[]
}

model Expense {
    id String @id @default(cuid())

    budgetItem   BudgetItem @relation(fields: [budgetItemId], references: [id])
    budgetItemId String

    expenseSection   ExpenseSection @relation(fields: [expenseSectionId], references: [id])
    expenseSectionId String

    Budget   Budget? @relation(fields: [budgetId], references: [id])
    budgetId String?
}

model Income {
    id String @id @default(cuid())

    budgetItem   BudgetItem @relation(fields: [budgetItemId], references: [id])
    budgetItemId String

    Budget   Budget? @relation(fields: [budgetId], references: [id])
    budgetId String?
}

model Record {
    id        String   @id @default(cuid())
    name      String
    amount    Float
    date      DateTime
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    budgetItem   BudgetItem @relation(fields: [budgetItemId], references: [id])
    budgetItemId String
}

model Budget {
    id       String    @id @default(cuid())
    incomes  Income[]
    expenses Expense[]

    user       User         @relation(fields: [userId], references: [id])
    userId     String
    BudgetItem BudgetItem[]
}
